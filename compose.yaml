services:
  app:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - 8081:3000
    environment:
      - REDIS_URL=redis://redis:6379
      - LOKI_URL=http://loki:3100
      - JAEGER_URL=http://jaeger:4317
    volumes:
      - ./gateway/routes/docker.json:/app/routes/routes.json
    depends_on:
      - redis
      - loki
      - jaeger
    restart: unless-stopped

  # auth:
  #   build:
  #     context: ./auth-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8082:3002
  #   environment:
  #     - JAEGER_URL=http://jaeger:4317

  users:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 8083:4001
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  appointments:
    build:
      context: ./appointment-service
      dockerfile: Dockerfile
    ports:
      - 8082:4002
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped

  health-service:
    build:
      context: ./health-service
      dockerfile: Dockerfile
    ports:
      - 8084:4003
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  nutrition-service:
    build:
      context: ./nutrition-service
      dockerfile: Dockerfile
    ports:
      - 8085:4004
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  fitness-service:
    build:
      context: ./fitness-service
      dockerfile: Dockerfile
    ports:
      - 8086:4005
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  plan-service:
    build:
      context: ./plan-service
      dockerfile: Dockerfile
    ports:
      - 8087:4006
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  challenge-service:
    build:
      context: ./challenge-service
      dockerfile: Dockerfile
    ports:
      - 8088:4007
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  social-service:
    build:
      context: ./social-service
      dockerfile: Dockerfile
    ports:
      - 8089:4008
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - 8090:4009
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  reporting-service:
    build:
      context: ./reporting-service
      dockerfile: Dockerfile
    ports:
      - 8091:4010
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    ports:
      - 8092:4011
    environment:
      - JAEGER_URL=http://jaeger:4317
    restart: unless-stopped
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    restart: unless-stopped

  grafana:
    image: grafana/grafana:main
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./conf/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    depends_on:
      - prometheus
      - loki
      - jaeger
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/loki-local-config.yaml
    volumes:
      - ./conf/loki-config.yaml:/etc/loki/loki-local-config.yaml
    restart: unless-stopped
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    restart: unless-stopped
networks:
  default:
    name: app

volumes:
  grafana-data:
  prometheus-data:
